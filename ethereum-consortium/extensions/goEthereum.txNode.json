{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commands": {
      "type": "array",
      "defaultValue": []
    },
    "nsgRules": {
      "type": "array",
      "defaultValue": []
    },
    "exports": {
      "type": "array",
      "defaultValue": []
    },
    "ruleSeed": {
      "type": "int",
      "defaultValue": 100
    },
    "data": {
      "type": "object",
      "defaultValue": {
        "dockerImage": "ethereumex/geth-node:latest",
        "arguments": []
      }
    },
    "parentName": {
      "type": "string"
    },
    "contentRoot": {
      "type": "string"
    }
  },
  "variables": {
    "nsgRules": [
      {
        "name": "SSH",
        "properties": {
          "protocol": "Tcp",
          "sourcePortRange": "*",
          "destinationPortRange": "22",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": "[add(parameters('ruleSeed'), 1)]",
          "direction": "Inbound"
        }
      },
      {
        "name": "allow-geth-rpc",
        "properties": {
          "protocol": "Tcp",
          "sourcePortRange": "*",
          "destinationPortRange": "8545",
          "sourceAddressPrefix": "VirtualNetwork",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": "[add(parameters('ruleSeed'), 2)]",
          "direction": "Inbound"
        }
      },
      {
        "name": "allow-bootnodes",
        "properties": {
          "protocol": "Tcp",
          "sourcePortRange": "*",
          "destinationPortRange": "30303",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": "[add(parameters('ruleSeed'), 3)]",
          "direction": "Inbound"
        }
      }
    ],
    "exports": [
      {
        "Name": "GethP2P",
        "Source": 30303,
        "Destination": 30303,
        "Protocol": "TCP"
      }
    ],
    "templateName": "[concat(parameters('parentName'), '.Tx')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('templateName')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(parameters('contentRoot'), '/extensions/goEthereum.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "commands": {
            "value": "[parameters('commands')]"
          },
          "nsgRules": {
            "value": "[variables('nsgRules')]"
          },
          "ruleSeed": {
            "value": "[add(parameters('ruleSeed'), length(variables('nsgRules')))]"
          },
          "data": {
            "value": "[parameters('data')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "Result": {
      "type": "object",
      "value": {
        "Commands": "[reference(variables('templateName')).outputs.result.value.commands]",
        "NsgRules": "[concat(parameters('nsgRules'), reference(variables('templateName')).outputs.result.value.nsgRules)]",
        "Exports": "[concat(parameters('exports'), variables('exports'))]",
        "RuleSeed": "[reference(variables('templateName')).outputs.result.value.ruleSeed]"
      }
    }
  }
}